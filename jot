#!/usr/bin/env perl

use strict;
use warnings;
use feature qw (say);

my ($pop) = @ARGV;

# No argument means that a note is to be added.
if (not defined $pop) {
    add_jot();
} elsif ($pop ne "pop") {
    die "jot: error: unknown argument “$pop”";
} else {
    pop_jot();
}

sub add_jot {
    my constant $temp_filename = "/tmp/jot-" . time();
    my constant $home_dir = $ENV{"HOME"};
    my $editor = $ENV{EDITOR} || "vim";
    system $editor => $temp_filename;

    my $contents = `cat $temp_filename`;

    my $contents_with_separator = $contents . "\f\n";

    my constant $jot_dir = "$home_dir/jot";
    `mkdir -p $jot_dir`;
    chdir "$jot_dir";
    `touch $jot_dir/jot`;

    open(my $fh, '>> :encoding(UTF-8)', "./jot")
        or die "jot: error: couldn’t open file.";
    say $fh $contents_with_separator;
    close $fh;
};

# Pop the last note and store it in the archive.
sub pop_jot {
    my $jot = "$ENV{HOME}/jot/jot";
    my $archive = "$ENV{HOME}/jot/archive";
    my $last_note = `fft-tail-pop 1 $jot`;
    `touch $archive`;
    open(my $fh, '>> :encoding(UTF-8)', "$archive")
        or die "jot: error: couldn’t open archive file for writing";

    say $fh $last_note;
    close $fh;
    # Strip the form feed (FF) before printing.
    my $last_note_print = `echo "$last_note" | fft-to-txt`;
    say $last_note_print;
}
